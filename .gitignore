# kütüphaneler
import numpy as np
import pandas as pd
import sklearn
import matplotlib.pyplot as plt

# Veri seti kütüphanesinin içe aktarılması ve veri setinin yüklenmesş
from sklearn.datasets import load_wine
wine = load_wine()

# Veri setini özelliklere ve karşılık gelen etiketlere bölme
X = pd.DataFrame(wine.data, columns=wine.feature_names)
y = pd.Categorical.from_codes(wine.target, wine.target_names)

# Verileri eğitim ve test kümelerine ayırı
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Özellik ölçekleme yapılması. LDA için gereklidir.
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

# LDA uygulanması
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
lda = LinearDiscriminantAnalysis(n_components=2)
X_train = lda.fit_transform(X_train, y_train)
X_test = lda.transform(X_test)

# Tahmin oluşturmak için random forest sınıflandırıcısı uygulanması
from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(max_depth=2, random_state=0)
classifier.fit(X_train, y_train)
y_pred = classifier.predict(X_test)
  
# Doğruluk ve hata matrisini oluşturma
from sklearn.metrics import accuracy_score, confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)
print('Accuracy' + str(accuracy_score(y_test, y_pred)))

# Model oluşturma
plt.xlabel('LD1')
plt.ylabel('LD2')  
plt.scatter(X_train[:,0],X_train[:,1],c=y,cmap='rainbow',alpha=0.7,edgecolors='b')
plt.show()
